{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Congzhen\\\\Desktop\\\\xx\\\\website\\\\frontend\\\\src\\\\components\\\\Upload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { detectImage } from '../api/detction';\nimport './Upload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Upload = ({\n  onResult,\n  onLoading\n}) => {\n  _s();\n  const [preview, setPreview] = useState(null);\n  const [error, setError] = useState(null);\n  const onDrop = useCallback(async acceptedFiles => {\n    setError(null);\n    if (acceptedFiles.length === 0) return;\n    const file = acceptedFiles[0];\n\n    // Validate file size\n    if (file.size > 10 * 1024 * 1024) {\n      setError('File size must be less than 10MB');\n      return;\n    }\n\n    // Create preview\n    const reader = new FileReader();\n    reader.onload = () => {\n      setPreview(reader.result);\n    };\n    reader.readAsDataURL(file);\n\n    // Upload and analyze\n    onLoading(true);\n    try {\n      const result = await detectImage(file);\n      onResult(result);\n    } catch (err) {\n      setError(err.message || 'Failed to analyze image');\n    } finally {\n      onLoading(false);\n    }\n  }, [onResult, onLoading]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': ['.jpeg', '.jpg', '.png', '.webp', '.bmp']\n    },\n    maxFiles: 1\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      className: `dropzone ${isDragActive ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), preview ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: preview,\n          alt: \"Preview\",\n          className: \"preview-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click or drag another image to analyze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropzone-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"upload-icon\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n            points: \"7 10 12 15 17 10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"12\",\n            y1: \"15\",\n            x2: \"12\",\n            y2: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & drop an image here, or click to select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"file-types\",\n          children: \"Supports: JPEG, PNG, WebP, BMP (max 10MB)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Upload, \"mgc6+XCiAsOrZorgDRCiscMOqwQ=\", false, function () {\n  return [useDropzone];\n});\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","detectImage","jsxDEV","_jsxDEV","Upload","onResult","onLoading","_s","preview","setPreview","error","setError","onDrop","acceptedFiles","length","file","size","reader","FileReader","onload","result","readAsDataURL","err","message","getRootProps","getInputProps","isDragActive","accept","maxFiles","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","viewBox","fill","stroke","d","points","x1","y1","x2","y2","_c","$RefreshReg$"],"sources":["C:/Users/Congzhen/Desktop/xx/website/frontend/src/components/Upload.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { detectImage } from '../api/detction';\r\nimport { DetectionResult } from '../types';\r\nimport './Upload.css';\r\n\r\ninterface UploadProps {\r\n  onResult: (result: DetectionResult) => void;\r\n  onLoading: (loading: boolean) => void;\r\n}\r\n\r\nconst Upload: React.FC<UploadProps> = ({ onResult, onLoading }) => {\r\n  const [preview, setPreview] = useState<string | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const onDrop = useCallback(async (acceptedFiles: File[]) => {\r\n    setError(null);\r\n    \r\n    if (acceptedFiles.length === 0) return;\r\n    \r\n    const file = acceptedFiles[0];\r\n    \r\n    // Validate file size\r\n    if (file.size > 10 * 1024 * 1024) {\r\n      setError('File size must be less than 10MB');\r\n      return;\r\n    }\r\n    \r\n    // Create preview\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      setPreview(reader.result as string);\r\n    };\r\n    reader.readAsDataURL(file);\r\n    \r\n    // Upload and analyze\r\n    onLoading(true);\r\n    try {\r\n      const result = await detectImage(file);\r\n      onResult(result);\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to analyze image');\r\n    } finally {\r\n      onLoading(false);\r\n    }\r\n  }, [onResult, onLoading]);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: {\r\n      'image/*': ['.jpeg', '.jpg', '.png', '.webp', '.bmp']\r\n    },\r\n    maxFiles: 1\r\n  });\r\n\r\n  return (\r\n    <div className=\"upload-container\">\r\n      <div \r\n        {...getRootProps()} \r\n        className={`dropzone ${isDragActive ? 'active' : ''}`}\r\n      >\r\n        <input {...getInputProps()} />\r\n        {preview ? (\r\n          <div className=\"preview-container\">\r\n            <img src={preview} alt=\"Preview\" className=\"preview-image\" />\r\n            <p>Click or drag another image to analyze</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"dropzone-content\">\r\n            <svg className=\"upload-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n              <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\" />\r\n              <polyline points=\"7 10 12 15 17 10\" />\r\n              <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\" />\r\n            </svg>\r\n            <p>Drag & drop an image here, or click to select</p>\r\n            <p className=\"file-types\">Supports: JPEG, PNG, WebP, BMP (max 10MB)</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {error && (\r\n        <div className=\"error-message\">\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}